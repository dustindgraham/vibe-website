name: 'Deployment'
on:
  push:
    branches:
      - master
  deployment:
jobs:
  build:
    name: Deploy
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-node@v1
        with:
          node-version: '13.x'
      - name: Cache Go modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Setup Hugo 0.68.3
        run: |
          HUGO_VER=0.68.3
          HUGO_ZIP=hugo_extended_${HUGO_VER}_Linux-64bit.tar.gz
          curl -OL https://github.com/gohugoio/hugo/releases/download/v$HUGO_VER/$HUGO_ZIP
          sudo tar xf $HUGO_ZIP -C /usr/local/bin hugo
          rm -f $HUGO_ZIP
      - name: Pip install
        run: |
          pip3 install -r requirements.txt
      - name: Yarn install
        run: yarn install
      - name: Sync blogs
        if: github.event_name == 'deployment' && github.event.deployment.task == 'sync-blogs'
        env:
          VIBE_CMS_TOKEN: ${{ secrets.VIBE_CMS_TOKEN }}
        run: |
          python3 sync-blogs
          git config user.name '${{ github.event.deployment.creator.login }} via GitHub Actions'
          git config user.email '${{ github.event.deployment.creator.login }}@users.noreply.github.com'
          if git add -A && git commit -m "Sync blogs using ./sync-blogs command"; then
            git push
          fi
      - name: Hugo build and deploy staging
        if: (github.event_name == 'push' && github.ref == 'refs/heads/master') || (github.event_name == 'deployment' && github.event.deployment.environment == 'staging')
        env:
          AWS_DEFAULT_REGION: us-west-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          hugo -e staging --minify
          hugo deploy --target aws-staging --invalidateCDN
      - name: Hugo build and deploy production
        if: github.event_name == 'deployment' && github.event.deployment.environment == 'production' && github.ref == 'refs/heads/master'
        env:
          AWS_DEFAULT_REGION: us-west-2
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          hugo -e production --minify
          hugo deploy --target aws-production --invalidateCDN
      - uses: actions/github-script@0.3.0
        if: github.event_name == 'deployment'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.repos.createDeploymentStatus({
              owner: 'vibeus',
              repo: '${{ github.event.repository.name }}',
              deployment_id: '${{ github.event.deployment.id }}',
              state: 'success',
            })
      - uses: actions/github-script@0.3.0
        if: github.event_name == 'deployment' && (failure() || cancelled())
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.repos.createDeploymentStatus({
              owner: 'vibeus',
              repo: '${{ github.event.repository.name }}',
              deployment_id: '${{ github.event.deployment.id }}',
              state: 'failure',
            })
